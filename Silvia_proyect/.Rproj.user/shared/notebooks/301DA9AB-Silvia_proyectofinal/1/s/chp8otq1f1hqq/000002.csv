"0","#En esta función  es para generar las hojas disponibles como refugios dentro de  un área de 200 x 300 m2. También crean las variables para el número de grupos,  número de individuos por grupo   "
"0",""
"0","sim_habitat <- function(n_groups, n_indiv, n_leaves = 3000, steps = 10000, sig2 = 0.7, plot = TRUE, xlim = c(0, 300), ylim = c(0, 200)) {"
"0",""
"0",""
"0","  if (n_leaves >= steps){"
"0","    cat(crayon::green(' Alto ahí, no se puede tener más hojas que steps\n'))"
"0","  stop()"
"0","}"
"0","  "
"0","t <- 0:steps  # Saltos de tiempo  en el que varia la distribución de hojas en el espacio"
"0",""
"0","## Primero, se crea un set simulación de desviaciones con σ2= 0.7, para los valores de x"
"0","x <- rnorm(n = length(t) - 1, sd = sqrt(sig2))"
"0",""
"0","## Ahora se  calcula la suma acumulada de las desviaciones "
"0","cx <- c(0, cumsum(x))"
"0"," plot(t, cx, type = ""l"", ylim = range(cx))"
"0",""
"0","## Se repiten los dos pasos anteriores para los valores de y"
"0","y <- rnorm(n = length(t) - 1, sd = sqrt(sig2))"
"0","## suma acumulada de las desviaciones para valores de y"
"0","cy <- c(0, cumsum(y))"
"0",""
"0","# Simulación de hojas disponibles como refugios"
"0",""
"0","sel_positions_x <- cumsum((rbinom(n_leaves, size = 2, prob = 0.1) * 400) + 50)"
"0","sel_positions_y <- cumsum((rbinom(n_leaves, size = 2, prob = 0.1) * 400) + 50)"
"0",""
"0","sel_positions_x <- (sel_positions_x / max(sel_positions_x)) * steps"
"0","sel_positions_y <- (sel_positions_y / max(sel_positions_y)) * steps"
"0",""
"0","slxs <- cx[sel_positions_x]"
"0","slys <- cy[sel_positions_y]"
"0",""
"0","# Obtenemos las coordenadas  para el número de hojas disponibles como refugio dentro de los limites del área de estudio  200 x300 m2"
"0","slxs <- slxs + abs(min(slxs))"
"0","slxs <- (slxs / max(slxs)) * xlim[2]"
"0","slys <- slys + abs(min(slys))"
"0","slys <- (slys / max(slys)) * ylim[2]"
"0",""
"0","# Se guardan las coordenadas de las hojas en  un data frame"
"0","coor_df <- data.frame(lon= slxs, lat = slys)"
"0",""
"0","if (plot)"
"0","plot(coor_df$lon, coor_df$lat, pch = 20, col = adjustcolor(""green"", alpha.f = 0.3), xlim = xlim + c(-10, 10), ylim = ylim + c(-10, 10))"
"0",""
"0",""
"0","return(plot) ## coor_df"
"0","}"
"0",""
